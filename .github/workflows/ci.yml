name: CI
# triggers on push to any branch
on:
  pull_request:
jobs:
  # TODO modify frontend build steps
  build-test-frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.1" # latest LTS at the time this is written.
      - name: build & lint
        working-directory: "./frontend"
        run: |
          npm ci
          npm run lint
          npm run build --if-present
      - name: test
        working-directory: "./frontend"
        run: |
          npm test

  # TODO modify backend build steps

  build-test-backend:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.1" # latest LTS at the time this is written.
      - name: build & lint
        working-directory: "./backend"
        run: |
          npm ci
          npm run lint
      - name: test
        working-directory: "./backend"
        run: |
          npm test
      - name: Set up environment variables into .env
        working-directory: "./backend"
        run: |
          echo "ME_CONFIG_MONGODB_SERVER=localhost" >> .env
      - name: Enable backend service and test
      
        working-directory: "./backend"
        env:
          MONGO_INITDB_ROOT_USERNAME: devroot
          MONGO_INITDB_ROOT_PASSWORD: devroot
        run: |
          npm run start&
          npm install -g wait-on
          npx wait-on http://localhost:3000/api/api-docs --timeout 10000
          npm run test:e2e
  # Playwright end-to-end test
  chrome-e2e-test:
    needs: [build-test-backend, build-test-frontend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.1" # latest LTS at the time this is written.
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
      - name: Set up playwright environment variables into .env
        working-directory: "./e2eTests"
        run: |
          echo "REACT_APP_URL=http://localhost:5000" >> .env
          echo "BACKEND_API_URL=http://localhost:3000/api" >> .env
          echo "BACKEND_API_URL=http://localhost:3000/api" >> .env
      - name: build playwright
        working-directory: "./e2eTests"
        run: |
          npm ci
      - name: Set up node server environment variables into .env
        working-directory: "./backend"
        run: |
          echo "ME_CONFIG_MONGODB_SERVER=localhost" >> .env

      # Run the start.sh script to spin up servers
      # Note that we are assuming the start.sh script spins up everything within 120s
      - name: Start servers
        working-directory: "./scripts"
        run: |
          chmod +x start-ci.sh
          (./start-ci.sh)&
          npm install -g wait-on
          npx wait-on http://localhost:5000/ --timeout 120000
          npx wait-on http://localhost:3000/api/api-docs --timeout 120000
      - name: Run Playwright E2E tests
        env:
          REACT_APP_URL: http://localhost:5000
          BACKEND_API_URL: http://localhost:3000/api
        working-directory: "./e2eTests"
        run: npm run test:e2e
